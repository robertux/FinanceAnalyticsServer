/*
 * This file is generated by jOOQ.
 */
package org.robertux.financeAnalytics.FinanceAnalyticsServer.data.entities;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.robertux.financeAnalytics.FinanceAnalyticsServer.data.entities.tables.Account;
import org.robertux.financeAnalytics.FinanceAnalyticsServer.data.entities.tables.Transaction;
import org.robertux.financeAnalytics.FinanceAnalyticsServer.data.entities.tables.User;
import org.robertux.financeAnalytics.FinanceAnalyticsServer.data.entities.tables.records.AccountRecord;
import org.robertux.financeAnalytics.FinanceAnalyticsServer.data.entities.tables.records.TransactionRecord;
import org.robertux.financeAnalytics.FinanceAnalyticsServer.data.entities.tables.records.UserRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TransactionRecord, Long> IDENTITY_TRANSACTION = Identities0.IDENTITY_TRANSACTION;
    public static final Identity<UserRecord, Long> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> ACCOUNT_PKEY = UniqueKeys0.ACCOUNT_PKEY;
    public static final UniqueKey<TransactionRecord> TRANSACTION_PKEY = UniqueKeys0.TRANSACTION_PKEY;
    public static final UniqueKey<UserRecord> CUSTOMER_PKEY = UniqueKeys0.CUSTOMER_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountRecord, UserRecord> ACCOUNT__FK_ACCOUNT_USER_ID = ForeignKeys0.ACCOUNT__FK_ACCOUNT_USER_ID;
    public static final ForeignKey<TransactionRecord, AccountRecord> TRANSACTION__FK_TRANSACTION_ACCOUNT_NUMBER = ForeignKeys0.TRANSACTION__FK_TRANSACTION_ACCOUNT_NUMBER;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TransactionRecord, Long> IDENTITY_TRANSACTION = Internal.createIdentity(Transaction.TRANSACTION, Transaction.TRANSACTION.ID);
        public static Identity<UserRecord, Long> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> ACCOUNT_PKEY = Internal.createUniqueKey(Account.ACCOUNT, "account_pkey", Account.ACCOUNT.NUMBER);
        public static final UniqueKey<TransactionRecord> TRANSACTION_PKEY = Internal.createUniqueKey(Transaction.TRANSACTION, "transaction_pkey", Transaction.TRANSACTION.ID);
        public static final UniqueKey<UserRecord> CUSTOMER_PKEY = Internal.createUniqueKey(User.USER, "customer_pkey", User.USER.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AccountRecord, UserRecord> ACCOUNT__FK_ACCOUNT_USER_ID = Internal.createForeignKey(org.robertux.financeAnalytics.FinanceAnalyticsServer.data.entities.Keys.CUSTOMER_PKEY, Account.ACCOUNT, "account__fk_account_user_id", Account.ACCOUNT.USER_ID);
        public static final ForeignKey<TransactionRecord, AccountRecord> TRANSACTION__FK_TRANSACTION_ACCOUNT_NUMBER = Internal.createForeignKey(org.robertux.financeAnalytics.FinanceAnalyticsServer.data.entities.Keys.ACCOUNT_PKEY, Transaction.TRANSACTION, "transaction__fk_transaction_account_number", Transaction.TRANSACTION.ACCOUNT_NUMBER);
    }
}
