/*
 * This file is generated by jOOQ.
 */
package org.robertux.financeAnalytics.FinanceAnalyticsServer.data.entities.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.robertux.financeAnalytics.FinanceAnalyticsServer.data.entities.tables.Account;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record4<Long, String, Integer, Long> {

    private static final long serialVersionUID = -1211153058;

    /**
     * Setter for <code>public.account.number</code>.
     */
    public void setNumber(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.account.number</code>.
     */
    public Long getNumber() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.account.alias</code>.
     */
    public void setAlias(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.account.alias</code>.
     */
    public String getAlias() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.account.type</code>.
     */
    public void setType(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.account.type</code>.
     */
    public Integer getType() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.account.user_id</code>.
     */
    public void setUserId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.account.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, Integer, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, Integer, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    public Field<Long> field1() {
        return Account.ACCOUNT.NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    public Field<String> field2() {
        return Account.ACCOUNT.ALIAS;
    }

    /**
     * {@inheritDoc}
     */
    public Field<Integer> field3() {
        return Account.ACCOUNT.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    public Field<Long> field4() {
        return Account.ACCOUNT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    public Long component1() {
        return getNumber();
    }

    /**
     * {@inheritDoc}
     */
    public String component2() {
        return getAlias();
    }

    /**
     * {@inheritDoc}
     */
    public Integer component3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    public Long component4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public Long value1() {
        return getNumber();
    }

    /**
     * {@inheritDoc}
     */
    public String value2() {
        return getAlias();
    }

    /**
     * {@inheritDoc}
     */
    public Integer value3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    public Long value4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public AccountRecord value1(Long value) {
        setNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    public AccountRecord value2(String value) {
        setAlias(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    public AccountRecord value3(Integer value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    public AccountRecord value4(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    public AccountRecord values(Long value1, String value2, Integer value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(Long number, String alias, Integer type, Long userId) {
        super(Account.ACCOUNT);

        set(0, number);
        set(1, alias);
        set(2, type);
        set(3, userId);
    }
}
